{"version":3,"sources":["../src/FileSystem.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventEmitter, Subscription, UnavailabilityError } from 'expo-modules-core';\nimport { Platform } from 'react-native';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport ExponentFileSystem from './ExponentFileSystem';\nimport {\n  DownloadOptions,\n  DownloadPauseState,\n  DownloadProgressCallback,\n  FileSystemNetworkTaskProgressCallback,\n  DownloadProgressData,\n  UploadProgressData,\n  DownloadResult,\n  EncodingType,\n  FileInfo,\n  FileSystemAcceptedUploadHttpMethod,\n  FileSystemDownloadResult,\n  FileSystemRequestDirectoryPermissionsResult,\n  FileSystemSessionType,\n  FileSystemUploadOptions,\n  FileSystemUploadResult,\n  FileSystemUploadType,\n  ProgressEvent,\n  ReadingOptions,\n  WritingOptions,\n} from './FileSystem.types';\n\nif (!ExponentFileSystem) {\n  console.warn(\n    \"No native ExponentFileSystem module found, are you sure the expo-file-system's module is linked properly?\"\n  );\n}\n// Prevent webpack from pruning this.\nconst _unused = new EventEmitter(ExponentFileSystem); // eslint-disable-line\n\nexport {\n  DownloadOptions,\n  DownloadPauseState,\n  DownloadProgressCallback,\n  DownloadProgressData,\n  DownloadResult,\n  EncodingType,\n  FileInfo,\n  FileSystemDownloadResult,\n  FileSystemRequestDirectoryPermissionsResult,\n  FileSystemAcceptedUploadHttpMethod,\n  FileSystemSessionType,\n  FileSystemUploadOptions,\n  FileSystemUploadResult,\n  FileSystemUploadType,\n  FileSystemNetworkTaskProgressCallback,\n  ReadingOptions,\n  WritingOptions,\n};\n\nfunction normalizeEndingSlash(p: string | null): string | null {\n  if (p != null) {\n    return p.replace(/\\/*$/, '') + '/';\n  }\n  return null;\n}\n\nexport const documentDirectory = normalizeEndingSlash(ExponentFileSystem.documentDirectory);\nexport const cacheDirectory = normalizeEndingSlash(ExponentFileSystem.cacheDirectory);\n\nexport const { bundledAssets, bundleDirectory } = ExponentFileSystem;\n\nexport async function getInfoAsync(\n  fileUri: string,\n  options: { md5?: boolean; size?: boolean } = {}\n): Promise<FileInfo> {\n  if (!ExponentFileSystem.getInfoAsync) {\n    throw new UnavailabilityError('expo-file-system', 'getInfoAsync');\n  }\n  return await ExponentFileSystem.getInfoAsync(fileUri, options);\n}\n\nexport async function readAsStringAsync(\n  fileUri: string,\n  options?: ReadingOptions\n): Promise<string> {\n  if (!ExponentFileSystem.readAsStringAsync) {\n    throw new UnavailabilityError('expo-file-system', 'readAsStringAsync');\n  }\n  return await ExponentFileSystem.readAsStringAsync(fileUri, options || {});\n}\n\nexport async function getContentUriAsync(fileUri: string): Promise<string> {\n  if (Platform.OS === 'android') {\n    if (!ExponentFileSystem.getContentUriAsync) {\n      throw new UnavailabilityError('expo-file-system', 'getContentUriAsync');\n    }\n    return await ExponentFileSystem.getContentUriAsync(fileUri);\n  } else {\n    return new Promise(function (resolve, reject) {\n      resolve(fileUri);\n    });\n  }\n}\n\nexport async function writeAsStringAsync(\n  fileUri: string,\n  contents: string,\n  options: WritingOptions = {}\n): Promise<void> {\n  if (!ExponentFileSystem.writeAsStringAsync) {\n    throw new UnavailabilityError('expo-file-system', 'writeAsStringAsync');\n  }\n  return await ExponentFileSystem.writeAsStringAsync(fileUri, contents, options);\n}\n\nexport async function deleteAsync(\n  fileUri: string,\n  options: { idempotent?: boolean } = {}\n): Promise<void> {\n  if (!ExponentFileSystem.deleteAsync) {\n    throw new UnavailabilityError('expo-file-system', 'deleteAsync');\n  }\n  return await ExponentFileSystem.deleteAsync(fileUri, options);\n}\n\nexport async function deleteLegacyDocumentDirectoryAndroid(): Promise<void> {\n  if (Platform.OS !== 'android' || documentDirectory == null) {\n    return;\n  }\n  const legacyDocumentDirectory = `${documentDirectory}ExperienceData/`;\n  return await deleteAsync(legacyDocumentDirectory, { idempotent: true });\n}\n\nexport async function moveAsync(options: { from: string; to: string }): Promise<void> {\n  if (!ExponentFileSystem.moveAsync) {\n    throw new UnavailabilityError('expo-file-system', 'moveAsync');\n  }\n  return await ExponentFileSystem.moveAsync(options);\n}\n\nexport async function copyAsync(options: { from: string; to: string }): Promise<void> {\n  if (!ExponentFileSystem.copyAsync) {\n    throw new UnavailabilityError('expo-file-system', 'copyAsync');\n  }\n  return await ExponentFileSystem.copyAsync(options);\n}\n\nexport async function makeDirectoryAsync(\n  fileUri: string,\n  options: { intermediates?: boolean } = {}\n): Promise<void> {\n  if (!ExponentFileSystem.makeDirectoryAsync) {\n    throw new UnavailabilityError('expo-file-system', 'makeDirectoryAsync');\n  }\n  return await ExponentFileSystem.makeDirectoryAsync(fileUri, options);\n}\n\nexport async function readDirectoryAsync(fileUri: string): Promise<string[]> {\n  if (!ExponentFileSystem.readDirectoryAsync) {\n    throw new UnavailabilityError('expo-file-system', 'readDirectoryAsync');\n  }\n  return await ExponentFileSystem.readDirectoryAsync(fileUri, {});\n}\n\nexport async function getFreeDiskStorageAsync(): Promise<number> {\n  if (!ExponentFileSystem.getFreeDiskStorageAsync) {\n    throw new UnavailabilityError('expo-file-system', 'getFreeDiskStorageAsync');\n  }\n  return await ExponentFileSystem.getFreeDiskStorageAsync();\n}\n\nexport async function getTotalDiskCapacityAsync(): Promise<number> {\n  if (!ExponentFileSystem.getTotalDiskCapacityAsync) {\n    throw new UnavailabilityError('expo-file-system', 'getTotalDiskCapacityAsync');\n  }\n  return await ExponentFileSystem.getTotalDiskCapacityAsync();\n}\n\nexport async function downloadAsync(\n  uri: string,\n  fileUri: string,\n  options: DownloadOptions = {}\n): Promise<FileSystemDownloadResult> {\n  if (!ExponentFileSystem.downloadAsync) {\n    throw new UnavailabilityError('expo-file-system', 'downloadAsync');\n  }\n\n  return await ExponentFileSystem.downloadAsync(uri, fileUri, {\n    sessionType: FileSystemSessionType.BACKGROUND,\n    ...options,\n  });\n}\n\nexport async function uploadAsync(\n  url: string,\n  fileUri: string,\n  options: FileSystemUploadOptions = {}\n): Promise<FileSystemUploadResult> {\n  if (!ExponentFileSystem.uploadAsync) {\n    throw new UnavailabilityError('expo-file-system', 'uploadAsync');\n  }\n\n  return await ExponentFileSystem.uploadAsync(url, fileUri, {\n    sessionType: FileSystemSessionType.BACKGROUND,\n    uploadType: FileSystemUploadType.BINARY_CONTENT,\n    ...options,\n    httpMethod: (options.httpMethod || 'POST').toUpperCase(),\n  });\n}\n\nexport function createDownloadResumable(\n  uri: string,\n  fileUri: string,\n  options?: DownloadOptions,\n  callback?: FileSystemNetworkTaskProgressCallback<DownloadProgressData>,\n  resumeData?: string\n): DownloadResumable {\n  return new DownloadResumable(uri, fileUri, options, callback, resumeData);\n}\n\nexport function createUploadTask(\n  url: string,\n  fileUri: string,\n  options?: FileSystemUploadOptions,\n  callback?: FileSystemNetworkTaskProgressCallback<UploadProgressData>\n): UploadTask {\n  return new UploadTask(url, fileUri, options, callback);\n}\n\nexport abstract class FileSystemCancellableNetworkTask<\n  T extends DownloadProgressData | UploadProgressData\n> {\n  private _uuid = uuidv4();\n  protected taskWasCanceled = false;\n  private emitter = new EventEmitter(ExponentFileSystem);\n  private subscription?: Subscription | null;\n\n  public async cancelAsync(): Promise<void> {\n    if (!ExponentFileSystem.networkTaskCancelAsync) {\n      throw new UnavailabilityError('expo-file-system', 'networkTaskCancelAsync');\n    }\n\n    this.removeSubscription();\n    this.taskWasCanceled = true;\n    return await ExponentFileSystem.networkTaskCancelAsync(this.uuid);\n  }\n\n  protected isTaskCancelled(): boolean {\n    if (this.taskWasCanceled) {\n      console.warn('This task was already canceled.');\n      return true;\n    }\n\n    return false;\n  }\n\n  protected get uuid(): string {\n    return this._uuid;\n  }\n\n  protected abstract getEventName(): string;\n\n  protected abstract getCallback(): FileSystemNetworkTaskProgressCallback<T> | undefined;\n\n  protected addSubscription() {\n    if (this.subscription) {\n      return;\n    }\n\n    this.subscription = this.emitter.addListener(this.getEventName(), (event: ProgressEvent<T>) => {\n      if (event.uuid === this.uuid) {\n        const callback = this.getCallback();\n        if (callback) {\n          callback(event.data);\n        }\n      }\n    });\n  }\n\n  protected removeSubscription() {\n    if (!this.subscription) {\n      return;\n    }\n    this.emitter.removeSubscription(this.subscription);\n    this.subscription = null;\n  }\n}\n\nexport class UploadTask extends FileSystemCancellableNetworkTask<UploadProgressData> {\n  private options: FileSystemUploadOptions;\n\n  constructor(\n    private url: string,\n    private fileUri: string,\n    options?: FileSystemUploadOptions,\n    private callback?: FileSystemNetworkTaskProgressCallback<UploadProgressData>\n  ) {\n    super();\n\n    const httpMethod = (options?.httpMethod?.toUpperCase ||\n      'POST') as FileSystemAcceptedUploadHttpMethod;\n\n    this.options = {\n      sessionType: FileSystemSessionType.BACKGROUND,\n      uploadType: FileSystemUploadType.BINARY_CONTENT,\n      ...options,\n      httpMethod,\n    };\n  }\n\n  protected getEventName(): string {\n    return 'expo-file-system.uploadProgress';\n  }\n  protected getCallback(): FileSystemNetworkTaskProgressCallback<UploadProgressData> | undefined {\n    return this.callback;\n  }\n\n  public async uploadAsync(): Promise<FileSystemUploadResult | undefined> {\n    if (!ExponentFileSystem.uploadTaskStartAsync) {\n      throw new UnavailabilityError('expo-file-system', 'uploadTaskStartAsync');\n    }\n\n    if (this.isTaskCancelled()) {\n      return;\n    }\n\n    this.addSubscription();\n    const result = await ExponentFileSystem.uploadTaskStartAsync(\n      this.url,\n      this.fileUri,\n      this.uuid,\n      this.options\n    );\n    this.removeSubscription();\n\n    return result;\n  }\n}\n\nexport class DownloadResumable extends FileSystemCancellableNetworkTask<DownloadProgressData> {\n  constructor(\n    private url: string,\n    private _fileUri: string,\n    private options: DownloadOptions = {},\n    private callback?: FileSystemNetworkTaskProgressCallback<DownloadProgressData>,\n    private resumeData?: string\n  ) {\n    super();\n  }\n\n  public get fileUri(): string {\n    return this._fileUri;\n  }\n\n  protected getEventName(): string {\n    return 'expo-file-system.downloadProgress';\n  }\n\n  protected getCallback(): FileSystemNetworkTaskProgressCallback<DownloadProgressData> | undefined {\n    return this.callback;\n  }\n\n  async downloadAsync(): Promise<FileSystemDownloadResult | undefined> {\n    if (!ExponentFileSystem.downloadResumableStartAsync) {\n      throw new UnavailabilityError('expo-file-system', 'downloadResumableStartAsync');\n    }\n\n    if (this.isTaskCancelled()) {\n      return;\n    }\n\n    this.addSubscription();\n    return await ExponentFileSystem.downloadResumableStartAsync(\n      this.url,\n      this._fileUri,\n      this.uuid,\n      this.options,\n      this.resumeData\n    );\n  }\n\n  async pauseAsync(): Promise<DownloadPauseState> {\n    if (!ExponentFileSystem.downloadResumablePauseAsync) {\n      throw new UnavailabilityError('expo-file-system', 'downloadResumablePauseAsync');\n    }\n\n    if (this.isTaskCancelled()) {\n      return {\n        fileUri: this._fileUri,\n        options: this.options,\n        url: this.url,\n      };\n    }\n\n    const pauseResult = await ExponentFileSystem.downloadResumablePauseAsync(this.uuid);\n    this.removeSubscription();\n    if (pauseResult) {\n      this.resumeData = pauseResult.resumeData;\n      return this.savable();\n    } else {\n      throw new Error('Unable to generate a savable pause state');\n    }\n  }\n\n  async resumeAsync(): Promise<FileSystemDownloadResult | undefined> {\n    if (!ExponentFileSystem.downloadResumableStartAsync) {\n      throw new UnavailabilityError('expo-file-system', 'downloadResumableStartAsync');\n    }\n\n    if (this.isTaskCancelled()) {\n      return;\n    }\n\n    this.addSubscription();\n    return await ExponentFileSystem.downloadResumableStartAsync(\n      this.url,\n      this.fileUri,\n      this.uuid,\n      this.options,\n      this.resumeData\n    );\n  }\n\n  savable(): DownloadPauseState {\n    return {\n      url: this.url,\n      fileUri: this.fileUri,\n      options: this.options,\n      resumeData: this.resumeData,\n    };\n  }\n}\n\nconst baseReadAsStringAsync = readAsStringAsync;\nconst baseWriteAsStringAsync = writeAsStringAsync;\nconst baseDeleteAsync = deleteAsync;\nconst baseMoveAsync = moveAsync;\nconst baseCopyAsync = copyAsync;\n/**\n * Android only\n */\nexport namespace StorageAccessFramework {\n  export function getUriForDirectoryInRoot(folderName: string) {\n    return `content://com.android.externalstorage.documents/tree/primary:${folderName}/document/primary:${folderName}`;\n  }\n\n  export async function requestDirectoryPermissionsAsync(\n    initialFileUrl: string | null = null\n  ): Promise<FileSystemRequestDirectoryPermissionsResult> {\n    if (!ExponentFileSystem.requestDirectoryPermissionsAsync) {\n      throw new UnavailabilityError(\n        'expo-file-system',\n        'StorageAccessFramework.requestDirectoryPermissionsAsync'\n      );\n    }\n\n    return await ExponentFileSystem.requestDirectoryPermissionsAsync(initialFileUrl);\n  }\n\n  export async function readDirectoryAsync(dirUri: string): Promise<string[]> {\n    if (!ExponentFileSystem.readSAFDirectoryAsync) {\n      throw new UnavailabilityError(\n        'expo-file-system',\n        'StorageAccessFramework.readDirectoryAsync'\n      );\n    }\n    return await ExponentFileSystem.readSAFDirectoryAsync(dirUri, {});\n  }\n\n  export async function makeDirectoryAsync(parentUri: string, dirName: string): Promise<string> {\n    if (!ExponentFileSystem.makeSAFDirectoryAsync) {\n      throw new UnavailabilityError(\n        'expo-file-system',\n        'StorageAccessFramework.makeDirectoryAsync'\n      );\n    }\n    return await ExponentFileSystem.makeSAFDirectoryAsync(parentUri, dirName);\n  }\n\n  export async function createFileAsync(\n    parentUri: string,\n    fileName: string,\n    mimeType: string\n  ): Promise<string> {\n    if (!ExponentFileSystem.createSAFFileAsync) {\n      throw new UnavailabilityError('expo-file-system', 'StorageAccessFramework.createFileAsync');\n    }\n    return await ExponentFileSystem.createSAFFileAsync(parentUri, fileName, mimeType);\n  }\n\n  export const writeAsStringAsync = baseWriteAsStringAsync;\n  export const readAsStringAsync = baseReadAsStringAsync;\n  export const deleteAsync = baseDeleteAsync;\n  export const moveAsync = baseMoveAsync;\n  export const copyAsync = baseCopyAsync;\n}\n"],"sourceRoot":""}